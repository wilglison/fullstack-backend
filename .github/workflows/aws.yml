name: Deploy to aws

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 22
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '22'

    - name: Build with Maven
      run: mvn clean package

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: target/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: java-app
        path: .

    - name: Install SSH Client
      run: sudo apt-get install -y openssh-client

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
        chmod 400 ec2-key.pem
        scp -i ec2-key.pem target/*.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/stp.jar
        ssh -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          pkill -f 'java -jar' || true
          nohup java -jar /home/${{ secrets.EC2_USER }}/stp.jar > app.log 2>&1 &
        EOF
      continue-on-error: true