name: Deploy to aws

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Build with Maven
      working-directory: projeto-spring-api
      run: mvn clean package -DskipTests=true

    - name: Upload app
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: projeto-spring-api/target/*.jar
    
    - name: Upload conf
      uses: actions/upload-artifact@v3
      with:
        name: java-conf
        path: projeto-spring-api/src/main/resources/application.prod.properties

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download app
      uses: actions/download-artifact@v3
      with:
        name: java-app
        path: .

    - name: Download conf
      uses: actions/download-artifact@v3
      with:
        name: java-conf
        path: .
    
    - name: Install SSH Client
      run: sudo apt-get install -y openssh-client

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_KEY }}
        EC2_HOST_PORT: ${{ secrets.EC2_HOST_PORT }}
      run: |
        echo "${{ secrets.EC2_KEY }}" > ec2-key.pem
        chmod 400 ec2-key.pem
        ls
        scp -o StrictHostKeyChecking=no -P ${{ secrets.EC2_HOST_PORT }} -i ec2-key.pem *.jar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/produto-api.jar
        scp -o StrictHostKeyChecking=no -P ${{ secrets.EC2_HOST_PORT }} -i ec2-key.pem application.prod.properties ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/application.prod.properties
        ssh -o StrictHostKeyChecking=no -p ${{ secrets.EC2_HOST_PORT }} -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          pkill -f 'java -jar' || true
          nohup java -Dspring.config.additional-location=application.prod.properties -jar /home/${{ secrets.EC2_USER }}/produto-api.jar > app.log 2>&1 &
        EOF
      #continue-on-error: true


  deploy-vue:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.11.0'

    - name: Install dependencies
      working-directory: projeto-vue-frontend
      run: npm ci

    - name: Build
      working-directory: projeto-vue-frontend
      run: npm run build

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        scp -o StrictHostKeyChecking=no -i private_key -r projeto-vue-frontend/dist/* ${USER}@${HOST}:/var/www/produto-vue/
        #ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} 'sudo systemctl restart nginx'
